--> 8) fakeCert(p,p2,p1,pk,g)
-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq k = pk .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq (k = pk) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq (b2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq a = p1 .
  eq (b = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq a = intruder .
  eq (a = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq k = pk .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) and inv12(p,a,b,b1,r1,r2,l,c,i,s) and inv13(p,a,b,b2,r1,r2,l,c,i,s,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq (k = pk) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq (b2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq intruder = p1 .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ntnf
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq sig(ca,intruder,k) = g .
  eq b2 = intruder .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq k = pk .
  -- eq (p2 = intruder) = false .
  -- eq (k = pk) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) .
  red inv12(p,a,b,b1,r1,r2,l,c,i,s) .
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq sig(ca,intruder,k) = g .
  eq (b2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq (sig(ca,intruder,k) = g) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- ntnf
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (a = intruder) = false .
  eq (a = p1) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq (sig(ca,b,k) = g) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- another one
-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq k = pk .
  eq intruder = p1 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq k = pk .
  eq (intruder = p1) = false .
  eq intruder = p2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq k = pk .
  eq (intruder = p1) = false .
  eq (intruder = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq ct(b2,b,a,cert(b,k,sig(ca,b,k))) \in nw(p) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b2 = intruder .
  eq (k = pk) = false .
  -- red inv3(p,a,b,b3,r1,r2,l,c,i,s) .
  -- red inv12(p,a,b,b1,r1,r2,l,c,i,s) .
  -- red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) and inv12(p,a,b,b1,r1,r2,l,c,i,s) and inv13(p,a,b,b2,r1,r2,l,c,i,s,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeCert(p,p2,p1,pk,g),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
-- ok
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq (i = i1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq (r2 = r3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq (b1 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq a = p1 .
  eq (b = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq a = intruder .
  eq (a = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq p1 = intruder .
  eq p2 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq p1 = intruder .
  eq (p2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq intruder = b2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = true .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(b1,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = true .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv12(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(b1,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = false .
  eq sh(intruder,intruder,p1,r3,i1,c1)\in nw(p) = true .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv12(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(b1,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = false .
  eq sh(intruder,intruder,p1,r3,i1,c1)\in nw(p) = false .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv12(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  -- eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  -- eq sh(b1,intruder,p1,r3,i1,c1) \in nw(p) = false .
  -- eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = false .
  -- eq sh(intruder,intruder,p1,r3,i1,c1)\in nw(p) = false .
  -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  -- red inv12(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq (i = i1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq b1 = intruder .
  eq (r2 = r3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  eq (b1 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  -- eq b1 = intruder .
  -- eq intruder = p1 .
  -- eq intruder = p2 .
  -- eq r2 = r3 .
  -- eq (i = i1) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq p1 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq intruder = b2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = false .
  -- eq sh(intruder,intruder,p1,r3,i1,c1)\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder) = false .
  eq (p2 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq r2 = r3 .
  eq (i = i1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq b1 = intruder .
  eq (r2 = r3) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  eq (b1 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq p1 = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq intruder = b2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = true .
  eq sh(intruder,intruder,p1,r3,i1,c1) \in nw(p) = false .
  eq ct(intruder,intruder,p1,cert(intruder,k,sig(ca,intruder,k)))\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = true .
  eq sf(b3,intruder,p1,esfin(k(intruder,pms(p1,intruder,s),r1,r3),sfin(p1,intruder,i1,l,c1,r1,r3,pms(p1,intruder,s)))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq p2 = intruder .
  eq (intruder = b2) = false .
  eq ct(b2,intruder,p1,cert(intruder,k,sig(ca,intruder,k))) \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq b2 = p1 .
  eq b2 = p2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq b2 = p1 .
  eq (b2 = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq (b2 = p1) = false .
  eq b2 = p2 .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq (b2 = p1) = false .
  eq (b2 = p2) = false .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(b2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq (b2 = p1) = false .
  eq (b2 = p2) = false .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(b2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  eq sh(p2,p2,p1,r3,i1,c1)\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq (b2 = p1) = false .
  eq (b2 = p2) = false .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(b2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq a = p1 .
  eq (b = intruder) = false .
  eq b = p2 .
  eq b1 = intruder .
  eq r2 = r3 .
  eq i = i1 .
  eq (p1 = intruder)  = false .
  eq (p2 = intruder) = false .
  eq intruder = b2 .
  eq (b2 = p1) = false .
  eq (b2 = p2) = false .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq ct(b2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = true .
  eq sh(b2,p2,p1,r3,i1,c1)\in nw(p) = false .
  eq ct(p2,p2,p1,cert(p2,k,sig(ca,p2,k)))\in nw(p) = false .
  eq sf(b3,p2,p1,esfin(k(p2,pms(p1,p2,s),r1,r3),sfin(p1,p2,i1,l,c1,r1,r3,pms(p1,p2,s))))\in nw(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close
eof
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  eq c = c1 .
  eq (a = intruder) = false .
  eq (a = p1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq a = intruder .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  eq (a = intruder) = false .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(shello(p,p2,r3,i1,c1,m1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

-- --> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
-- -- ok
-- open INV .
--   op p : -> Protocol .
--   ops a b b1 b2 b3 : -> Prin .
--   ops r1 r2 : -> Rand .
--   op l : -> ListOfChoices .
--   op c : -> Choice .
--   op i : -> Sid .
--   op s : -> Secret .
--   op k : -> PubKey .
-- -- arbitrary objects
--   ops p1 p2 : -> Prin .
--   op i1 : -> Sid .
--   op l1 : -> ListOfChoices .
--   op c1 : -> Choice .
--   ops r3 r4 : -> Rand .
--   op pms1 : -> Pms .
-- -- assumptions
--   eq pms1 \in cpms(nw(p)) = true .
--   eq a = intruder .
--   red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
-- close

-- -- ok
-- open INV .
--   op p : -> Protocol .
--   ops a b b1 b2 b3 : -> Prin .
--   ops r1 r2 : -> Rand .
--   op l : -> ListOfChoices .
--   op c : -> Choice .
--   op i : -> Sid .
--   op s : -> Secret .
--   op k : -> PubKey .
-- -- arbitrary objects
--   ops p1 p2 : -> Prin .
--   op i1 : -> Sid .
--   op l1 : -> ListOfChoices .
--   op c1 : -> Choice .
--   ops r3 r4 : -> Rand .
--   op pms1 : -> Pms .
-- -- assumptions
--   eq pms1 \in cpms(nw(p)) = true .
--   eq (a = intruder) = false .
--   eq b1 = intruder .
--   eq r3 = r1 .
--   eq i1 = i .
--   eq l1 = l .
--   eq c1 = c .
--   eq pms1 = pms(a,b,s) .
--   eq r4 = r2 .
--   eq p1 = a .
--   eq p2 = b .
--   eq b3 = intruder .

--   eq b2 = b .
--   eq b = intruder .
--   -- red inv3(p,a,b,b3,r1,r2,l,c,i,s) .
--   -- red inv12(p,a,b,b1,r1,r2,l,c,i,s) .
--   -- red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
--   -- red inv4(p,a,b,r1,r2,l,c,i,s) .
--   -- red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
--   -- red inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
--   red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
-- close

-- open INV .
--   op p : -> Protocol .
--   ops a b b1 b2 b3 : -> Prin .
--   ops r1 r2 : -> Rand .
--   op l : -> ListOfChoices .
--   op c : -> Choice .
--   op i : -> Sid .
--   op s : -> Secret .
--   op k : -> PubKey .
-- -- arbitrary objects
--   ops p1 p2 : -> Prin .
--   op i1 : -> Sid .
--   op l1 : -> ListOfChoices .
--   op c1 : -> Choice .
--   ops r3 r4 : -> Rand .
--   op pms1 : -> Pms .
-- -- assumptions
--   eq pms1 \in cpms(nw(p)) = true .
--   eq (a = intruder) = false .
--   eq b1 = intruder .
--   eq r3 = r1 .
--   eq i1 = i .
--   eq l1 = l .
--   eq c1 = c .
--   eq pms1 = pms(a,b,s) .
--   eq r4 = r2 .
--   eq p1 = a .
--   eq p2 = b .
--   eq b3 = intruder .

--   eq b2 = b .
--   eq (b = intruder) = false .
--   red inv3(p,a,b,b3,r1,r2,l,c,i,s) .
--   red inv12(p,a,b,b1,r1,r2,l,c,i,s) .
--   red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
--   red inv4(p,a,b,r1,r2,l,c,i,s) .
--   red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
--   red inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
--   red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
-- close

eof
red inv1(p,pms(a,b,s)) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) .
  red inv12(p,a,b,b1,r1,r2,l,c,i,s) .
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
red inv1(p,pms(a,b,s))
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv12(p,a,b,b1,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
red inv3(p,a,b,b3,r1,r2,l,c,i,s) and inv12(p,a,b,b1,r1,r2,l,c,i,s) .
  red inv12(p,a,b,b1,r1,r2,l,c,i,s) and inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
  red inv3(p,a,b,b3,r1,r2,l,c,i,s) and inv13(p,a,b,b2,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
    red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv12(p,a,b,b1,r1,r2,l,c,i,s) implies inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv12(p,a,b,b1,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
red inv12(p,a,b,b1,r1,r2,l,c,i,s) implies inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
red inv3(p,a,b,b3,r1,r2,l,c,i,s) implies inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .