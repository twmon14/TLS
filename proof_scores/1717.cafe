open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq a = intruder .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv13(p,a,b,b2,r1,r2,l,c,i,s,k)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) . -- t
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq ct(b,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    red inv4(p,a,b,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = true . 
    red inv12(p,a,b,b1,r1,r2,l,c,i,s)
    implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) . -- t
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = true .
    eq sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false . 
    red inv4(p,a,b,r1,r2,l,c,i,s) implies inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = true .
    eq sh(b,b,a,r2,i,c)\in nw(p) = false .
    eq sf(intruder,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))\in nw(p) = false .
    eq sh(b1,b,a,r2,i,c)\in nw(p) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
    eq ct(b2,b,a,cert(b,k,sig(ca,b,k)))\in nw(p) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
    eq (a = intruder) = false .
    eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq p1 = a .
    eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq p2 = b .
    eq (p1 = a) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq b3 = intruder .
    eq (p2 = b) = false .
    red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
    eq esfin1 \in cesfin(nw(p)) = true .
    eq (b3 = intruder) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close

open INV .
  op p : -> Protocol .
  ops a b b1 b2 b3 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv17(p,a,b,b1,b2,b3,r1,r2,l,c,i,s,k) implies inv17(fakeSfin1(p,p2,p1,esfin1),a,b,b1,b2,b3,r1,r2,l,c,i,s,k) .
close
