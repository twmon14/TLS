open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw10 : -> Network .
  
  eq nw(p) = m1, m2, m3, m4, m5, nw10 .
  eq ch?(m1) = false .
  
  red inv8(p,a,b,r1,r2,l,c,i,s) .
  red inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close
eof
-- assumptions
  -- eq m1 \in nw(p) = true .
  -- eq m2 \in nw(p) = true .
  -- eq m3 \in nw(p) = true .
  -- eq m4 \in nw(p) = true .
  -- eq m5 \in nw(p) = true .
  -- eq ch?(m1) = true .
  -- eq sh?(m2) = true .
  -- eq ct?(m3) = true .
  -- eq kx?(m4) = true .
  -- eq cf?(m5) = true .
  -- eq crt(m2) = p2 .
  -- eq src(m2) = p2 .
  -- eq crt(m3) = p2 .
  -- eq src(m3) = p2 .
  -- eq dst(m3) = dst(m2) .
  -- eq src(m1) = dst(m2) .
  -- eq dst(m1) = p2 .
  -- eq src(m4) = dst(m2) .
  -- eq dst(m4) = p2 .
  -- eq src(m5) = dst(m2) .
  -- eq dst(m5) = p2 .
  -- eq choice(m2) \in list(m1) = true .
  -- eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  -- eq k(epms(m4)) = k(p2) .
  -- eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
  --                     cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  -- red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .

-- up 
-- inv8
--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq (b = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq a = dst(m2) .
  eq (b = intruder) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq a = intruder .
  eq (a = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq b = intruder .
  eq (b = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq intruder = dst(m2) .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq intruder = dst(m2) .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq intruder = dst(m2) .
  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq intruder = dst(m2) .
  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq intruder = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq intruder = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq intruder = p2 .
  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq intruder = p2 .
  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ntnf
open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq (intruder = p2) = false .

  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  red inv8(p,a,b,r1,r2,l,c,i,s) .
  red inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq (intruder = p2) = false .

  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq (intruder = p2) = false .

  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
 red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq b = p2 .
  eq (intruder = dst(m2)) = false .

  eq (intruder = p2) = false .

  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq l = list(m1) .
  eq (a = intruder) = false .

  eq a = dst(m2) .
  eq (b = intruder) = false .

  eq (b = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq (l = list(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq c = choice(m2) .
  eq (pms(epms(m4)) = pms(a,b,s)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq (c = choice(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close





-- inv7
open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq intruder = dst(m2) .
  eq intruder = p2 .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq intruder = dst(m2) .
  eq intruder = p2 .
  eq (pms(epms(m4)) = pms(dst(m2),p2,s)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq intruder = dst(m2) .
  eq (intruder = p2) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (intruder = dst(m2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq intruder = p2 .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (intruder = dst(m2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (intruder = p2) = false .
    red inv7(p,a,b,r1,r2,l,c,i,s) .
    red inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
    red inv3(p,a,b,b,r1,r2,l,c,i,s) .
    red inv4(p,a,b,r1,r2,l,c,i,s) .
    red inv5(p,a,b,b,r1,r2,c,i,s) .
    red inv6(p,a,b,r1,r2,c,i,s) .
    red inv8(p,a,b,r1,r2,l,c,i,s) .
    red inv12(p,a,b,b,r1,r2,l,c,i,s) .
    red inv14(p,a,b,r1,r2,c,i,s) .
    red inv15(p,a,b,r1,c,i) .
    red inv16(p,a,b,b,r1,r2,c,i,s) .
    red inv18(p,a,b,b,b,r1,r2,c,i,s) .
    eq sh2(p2,intruder,dst(m2),rand(m1),sid(m2),choice(m2)) \in nw(p) = true .
  red inv15(p,a,b,r1,c,i) implies inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (intruder = dst(m2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (intruder = p2) = false .
  eq (b = intruder) = false .
    red inv7(p,a,b,r1,r2,l,c,i,s) .
    red inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
    red inv3(p,a,b,b,r1,r2,l,c,i,s) .
    red inv4(p,a,b,r1,r2,l,c,i,s) .
    red inv5(p,a,b,b,r1,r2,c,i,s) .
    red inv6(p,a,b,r1,r2,c,i,s) .
    red inv8(p,a,b,r1,r2,l,c,i,s) .
    red inv12(p,a,b,b,r1,r2,l,c,i,s) .
    red inv14(p,a,b,r1,r2,c,i,s) .
    red inv15(p,a,b,r1,c,i) .
    red inv16(p,a,b,b,r1,r2,c,i,s) .
    red inv18(p,a,b,b,b,r1,r2,c,i,s) .
    red inv9(p,b,k(p2)) .
    red inv10(p,a,b,r1,c,i) .
    red inv11(p,a,b,k(epms(m4))) .
    -- eq sh2(p2,intruder,dst(m2),rand(m1),sid(m2),choice(m2)) \in nw(p) = false .
    -- eq sh(p2,intruder,dst(m2),rand(m1),sid(m2),choice(m2)) \in nw(p) = false .
    eq sh(p2,p2,dst(m2),rand(m2),sid(m2),choice(m2)) \in nw(p) = false .
  red inv15(p,a,b,r1,c,i) implies inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
    red inv10(p,a,b,r1,c,i) implies inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
    red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .

close

eof
  eq (intruder = dst(m2)) = false .

  eq (intruder = p2) = false .
