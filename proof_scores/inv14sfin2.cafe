open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

    eq c = choice(m2) .
    eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
    -- eq a = intruder .
        eq (a = intruder) = false .
    eq a = dst(m2) .
        -- eq (a = dst(m2)) = false .
    -- eq b = intruder .
    eq (b = intruder) = false .
    eq b = p2 .
        -- eq (b = p2) = false .
    eq r1 = rand(m1) .
        -- eq (r1 = rand(m1)) = false .
    eq r2 = rand(m2) .
        -- eq (r2 = rand(m2)) = false .
    eq i = sid(m2) .
        -- eq (i = sid(m2)) = false .
    -- eq dst(m2) = intruder .
    eq (dst(m2) = intruder) = false .
    eq (p2 = intruder) = false .
--   red c-sfin2(p,p2,m1,m2,m3) .
--   red inv14(p,a,b,r1,r2,c,i,s) .
--   red inv14(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
  red inv6(p,intruder,b,r1,r2,c,i,s) implies inv14(p,a,b,r1,r2,c,i,s) implies inv14(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,c,i,s) .
close

eof
eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq c = choice(m2) .
    eq a = dst(m2) .
  eq b = p2 .
  eq (dst(m2) = intruder) = false .
--   eq p2 = intruder .
  eq (p2 = intruder) = false .
  eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(dst(m2),p2,s) .
--   eq (pms(dst(m2),p2,s) = pms(ss(p,dst(m2),p2,sid(m2)))) = false .
  eq r2 = rand(m2) .
    -- eq (r2 = rand(m2)) = false .