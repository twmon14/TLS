-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq dst(m2) = intruder .
  eq pms(dst(m2),p2,s) = pms(epms(m4)) .
  eq r2 = rand(m2) .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq dst(m2) = intruder .
  eq pms(dst(m2),p2,s) = pms(epms(m4)) .
  eq (r2 = rand(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq dst(m2) = intruder .
  eq (pms(dst(m2),p2,s) = pms(epms(m4))) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq r2 = rand(m2) .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq b = p2 .
  eq (r2 = rand(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq b = intruder .
  eq (b = p2) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq (b = intruder) = false .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq intruder = p2 .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ntnf
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq (b = intruder) = false .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq (intruder = p2) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
--   eq a = intruder .
  eq a = dst(m2) .
  eq (b = intruder) = false .
  eq b = p2 .
  eq (r2 = rand(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq a = dst(m2) .
  eq (b = intruder) = false .
  eq (b = p2) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq pms(epms(m4)) = pms(a,b,s) .
  eq (a = dst(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

-- ok
open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (dst(m2) = intruder) = false .
  eq (pms(epms(m4)) = pms(a,b,s)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq (c = choice(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq (l = list(m1)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq r1 = rand(m1) .
  eq (i = sid(m2)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

--
  eq (r1 = rand(m1)) = false .
  red inv7(p,a,b,r1,r2,l,c,i,s) implies inv7(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

