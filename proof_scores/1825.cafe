--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq a = intruder .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq b2 = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  eq dst(m2) = intruder .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq b2 = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq i = sid(m2) .
  eq (dst(m2) = intruder) = false .
  red lm1(m2, sh2(p2,p2,dst(m2),rand(m2),sid(m2),choice(m2)), nw(p))
    implies inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq b2 = p2 .
  eq r1 = rand(m1) .
  eq r2 = rand(m2) .
  eq (i = sid(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq b2 = p2 .
  eq r1 = rand(m1) .
  eq (r2 = rand(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq b2 = p2 .
  eq (r1 = rand(m1)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (b2 = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq a = dst(m2) .
  eq (b = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2))) .
  -- eq pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s) .
  eq (a = dst(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq c = choice(m2) .
  eq (pms(a,b,s) = pms(ss(p,dst(m2),p2,sid(m2)))) = false .
  -- eq (pms(ss(p,dst(m2),p2,sid(m2))) = pms(a,b,s)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .

  eq (a = intruder) = false .
  eq (c = choice(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close

open INV .
  :id(tls)  
  op p : -> Protocol .
  ops a b b1 b2 : -> Prin .
  ops r1 r2 : -> Rand .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv18(p,a,b,b1,b2,r1,r2,c,i,s) implies inv18(sfin2(p,p2,m1,m2,m3),a,b,b1,b2,r1,r2,c,i,s) .
close