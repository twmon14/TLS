open INV .
	:goal{
		eq [tls :nonexec] : inv10(P:Protocol,P:Prin,P0:Prin,R:Rand,C:Choice,S:Sid) = true .
		eq [tls1 :nonexec] : inv7(P:Protocol,P:Prin,P0:Prin,R:Rand,R0:Rand,L:ListOfChoices,C:Choice,S:Sid,S:Secret) = true .
		eq [tls2 :nonexec] : inv12(P:Protocol,P:Prin,P1:Prin,P0:Prin,R:Rand,R0:Rand,L:ListOfChoices,C:Choice,S:Sid,S:Secret) = true .
	}

    eq [lm1 :nonexec] : lm1(M:Msg, M2:Msg, NW:Network) = true .

	:ind on (P:Protocol)

	:apply(si)

	:apply(tc)

	:def csb1 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb1)

	:def csb2 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb2)

	:def csb3 = :ctf [ch?(M#Msg) .]

	:apply(csb3)

	:def csb4 = :ctf [sh?(M0#Msg) .]

	:apply(csb4)

	:def csb5 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb5)

	:def csb6 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb6)

	:def csb7 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb7)

	:def csb8 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb8)

	:def csb9 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb9)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb10 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb10)

	:def csb11 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb11)

	:def csb12 = :ctf [ch?(M#Msg) .]

	:apply(csb12)

	:def csb13 = :ctf [sh?(M0#Msg) .]

	:apply(csb13)

	:def csb14 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb14)

	:def csb15 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb15)

	:def csb16 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb16)

	:def csb17 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb17)

	:def csb18 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb18)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb19 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb19)

	:def csb20 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb20)

	:def csb21 = :ctf [ch?(M#Msg) .]

	:apply(csb21)

	:def csb22 = :ctf [sh?(M0#Msg) .]

	:apply(csb22)

	:def csb23 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb23)

	:def csb24 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb24)

	:def csb25 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb25)

	:def csb26 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb26)

	:def csb27 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb27)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb28 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb28)

	:def csb29 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb29)

	:def csb30 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb30)

	:def csb31 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb31)

	:def csb32 = :ctf [ch?(M#Msg) .]

	:apply(csb32)

	:def csb33 = :ctf [sh?(M0#Msg) .]

	:apply(csb33)

	:def csb34 = :ctf [ct?(M1#Msg) .]

	:apply(csb34)

	:def csb35 = :ctf [kx?(M2#Msg) .]

	:apply(csb35)

	:def csb36 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb36)

	:def csb37 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb37)

	:def csb38 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb38)

	:def csb39 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb39)

	:def csb40 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb40)

	:def csb41 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb41)

	:def csb42 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb42)

	:def csb43 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb43)

	:def csb44 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb44)

	:def csb45 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb45)

	:def csb46 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb46)

	:def csb47 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb47)

	:def csb48 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb48)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb49 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb49)

	:def csb50 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb50)

	:def csb51 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb51)

	:def csb52 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb52)

	:def csb53 = :ctf [ch?(M#Msg) .]

	:apply(csb53)

	:def csb54 = :ctf [sh?(M0#Msg) .]

	:apply(csb54)

	:def csb55 = :ctf [ct?(M1#Msg) .]

	:apply(csb55)

	:def csb56 = :ctf [kx?(M2#Msg) .]

	:apply(csb56)

	:def csb57 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb57)

	:def csb58 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb58)

	:def csb59 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb59)

	:def csb60 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb60)

	:def csb61 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb61)

	:def csb62 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb62)

	:def csb63 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb63)

	:def csb64 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb64)

	:def csb65 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb65)

	:def csb66 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb66)

	:def csb67 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb67)

	:def csb68 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb68)

	:def csb69 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb69)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb70 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb70)

	:def csb71 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb71)

	:def csb72 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb72)

	:def csb73 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb73)

	:def csb74 = :ctf [ch?(M#Msg) .]

	:apply(csb74)

	:def csb75 = :ctf [sh?(M0#Msg) .]

	:apply(csb75)

	:def csb76 = :ctf [ct?(M1#Msg) .]

	:apply(csb76)

	:def csb77 = :ctf [kx?(M2#Msg) .]

	:apply(csb77)

	:def csb78 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb78)

	:def csb79 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb79)

	:def csb80 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb80)

	:def csb81 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb81)

	:def csb82 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb82)

	:def csb83 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb83)

	:def csb84 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb84)

	:def csb85 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb85)

	:def csb86 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb86)

	:def csb87 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb87)

	:def csb88 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb88)

	:def csb89 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb89)

	:def csb90 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb90)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb91 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb91)

	:def csb92 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb92)

	:def csb93 = :ctf [ch2?(M#Msg) .]

	:apply(csb93)

	:def csb94 = :ctf [sh2?(M0#Msg) .]

	:apply(csb94)

	:def csb95 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb95)

	:def csb96 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb96)

	:def csb97 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb97)

	:def csb98 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb98)

	:def csb99 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb99)

	:def csb100 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb100)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

    :def csb101 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb101)

	:def csb102 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb102)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb103 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb103)

	:def csb104 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb104)

	:def csb105 = :ctf [ch2?(M#Msg) .]

	:apply(csb105)

	:def csb106 = :ctf [sh2?(M0#Msg) .]

	:apply(csb106)

	:def csb107 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb107)

	:def csb108 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb108)

	:def csb109 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb109)

	:def csb110 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb110)

	:def csb111 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb111)

	:def csb112 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb112)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb113 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb113)

	:def csb114 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb114)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb115 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb115)

	:def csb116 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb116)

	:def csb117 = :ctf [ch2?(M#Msg) .]

	:apply(csb117)

	:def csb118 = :ctf [sh2?(M0#Msg) .]

	:apply(csb118)

	:def csb119 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb119)

	:def csb120 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb120)

	:def csb121 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb121)

	:def csb122 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb122)

	:def csb123 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb123)

	:def csb124 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb124)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb125 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb125)

	:def csb126 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb126)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb127 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb127)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb128 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb128)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb129 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb129)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb130 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb130)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb131 = :ctf {eq ss(P#Protocol,P#Prin,P0#Prin,S#Sid) = none .}

	:apply(csb131)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb132 = :ctf {eq pms(ss(P#Protocol,P#Prin,P0#Prin,S#Sid)) = pms(P#Prin,P0#Prin,S#Secret).}

	:apply(csb132)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb133 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb133)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb134 = :ctf {eq ss(P#Protocol,P#Prin,P0#Prin,S#Sid) = none .}

	:apply(csb134)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb135 = :ctf {eq pms(ss(P#Protocol,P#Prin,P0#Prin,S#Sid)) = pms(P#Prin,P0#Prin,S#Secret).}

	:apply(csb135)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb136 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb136)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb137 = :ctf {eq ss(P#Protocol,P#Prin,P0#Prin,S#Sid) = none .}

	:apply(csb137)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb138 = :ctf {eq pms(ss(P#Protocol,P#Prin,P0#Prin,S#Sid)) = pms(P#Prin,P0#Prin,S#Secret).}

	:apply(csb138)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb139 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb139)

	:def csb140 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb140)

	:def csb141 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb141)

	:def csb142 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb142)

	:def csb143 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb143)

	:def csb144 = :ctf [M4#Msg \in nw(P#Protocol) .]

	:apply(csb144)

	:def csb145 = :ctf [ch?(M#Msg) .]

	:apply(csb145)

	:def csb146 = :ctf [sh?(M0#Msg) .]

	:apply(csb146)

	:def csb147 = :ctf [ct?(M1#Msg) .]

	:apply(csb147)

	:def csb148 = :ctf [kx?(M2#Msg) .]

	:apply(csb148)

	:def csb149 = :ctf [cf?(M3#Msg) .]

	:apply(csb149)

	:def csb150 = :ctf [sf?(M4#Msg) .]

	:apply(csb150)

	:def csb151 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb151)

	:def csb152 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb152)

	:def csb153 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb153)

	:def csb154 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb154)

	:def csb155 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb155)

	:def csb156 = :ctf {eq crt(M3#Msg) = P#Prin .}

	:apply(csb156)

	:def csb157 = :ctf {eq src(M3#Msg) = P#Prin .}

	:apply(csb157)

	:def csb158 = :ctf {eq dst(M3#Msg) = dst(M#Msg).}

	:apply(csb158)

	:def csb159 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb159)

	:def csb160 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb160)

	:def csb161 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb161)

	:def csb162 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb162)

	:def csb163 = :ctf {eq src(M4#Msg) = dst(M#Msg).}

	:apply(csb163)

	:def csb164 = :ctf {eq dst(M4#Msg) = P#Prin .}

	:apply(csb164)

	:def csb165 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb165)

	:def csb166 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb166)

	:def csb167 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb167)

	:def csb168 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb168)

	:def csb169 = :ctf {eq ecfin(M3#Msg) = ecfin(k(P#Prin,pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb169)

	:def csb170 = :ctf {eq esfin(M4#Msg) = esfin(k(dst(M#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),sfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb170)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb171 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb171)

	:def csb172 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb172)

	:def csb173 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb173)

	:def csb174 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb174)

	:def csb175 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb175)

	:def csb176 = :ctf [M4#Msg \in nw(P#Protocol) .]

	:apply(csb176)

	:def csb177 = :ctf [ch?(M#Msg) .]

	:apply(csb177)

	:def csb178 = :ctf [sh?(M0#Msg) .]

	:apply(csb178)

	:def csb179 = :ctf [ct?(M1#Msg) .]

	:apply(csb179)

	:def csb180 = :ctf [kx?(M2#Msg) .]

	:apply(csb180)

	:def csb181 = :ctf [cf?(M3#Msg) .]

	:apply(csb181)

	:def csb182 = :ctf [sf?(M4#Msg) .]

	:apply(csb182)

	:def csb183 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb183)

	:def csb184 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb184)

	:def csb185 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb185)

	:def csb186 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb186)

	:def csb187 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb187)

	:def csb188 = :ctf {eq crt(M3#Msg) = P#Prin .}

	:apply(csb188)

	:def csb189 = :ctf {eq src(M3#Msg) = P#Prin .}

	:apply(csb189)

	:def csb190 = :ctf {eq dst(M3#Msg) = dst(M#Msg).}

	:apply(csb190)

	:def csb191 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb191)

	:def csb192 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb192)

	:def csb193 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb193)

	:def csb194 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb194)

	:def csb195 = :ctf {eq src(M4#Msg) = dst(M#Msg).}

	:apply(csb195)

	:def csb196 = :ctf {eq dst(M4#Msg) = P#Prin .}

	:apply(csb196)

	:def csb197 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb197)

	:def csb198 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb198)

	:def csb199 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,server(cert(M1#Msg)),pubkey(cert(M1#Msg))).}

	:apply(csb199)

	:def csb200 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb200)

    :def csb201 = :ctf {eq ecfin(M3#Msg) = ecfin(k(P#Prin,pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb201)

	:def csb202 = :ctf {eq esfin(M4#Msg) = esfin(k(dst(M#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),sfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb202)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb203 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb203)

	:def csb204 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb204)

	:def csb205 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb205)

	:def csb206 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb206)

	:def csb207 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb207)

	:def csb208 = :ctf [M4#Msg \in nw(P#Protocol) .]

	:apply(csb208)

	:def csb209 = :ctf [ch?(M#Msg) .]

	:apply(csb209)

	:def csb210 = :ctf [sh?(M0#Msg) .]

	:apply(csb210)

	:def csb211 = :ctf [ct?(M1#Msg) .]

	:apply(csb211)

	:def csb212 = :ctf [kx?(M2#Msg) .]

	:apply(csb212)

	:def csb213 = :ctf [cf?(M3#Msg) .]

	:apply(csb213)

	:def csb214 = :ctf [sf?(M4#Msg) .]

	:apply(csb214)

	:def csb215 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb215)

	:def csb216 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb216)

	:def csb217 = :ctf {eq crt(M2#Msg) = P#Prin .}

	:apply(csb217)

	:def csb218 = :ctf {eq src(M2#Msg) = P#Prin .}

	:apply(csb218)

	:def csb219 = :ctf {eq dst(M2#Msg) = dst(M#Msg).}

	:apply(csb219)

	:def csb220 = :ctf {eq crt(M3#Msg) = P#Prin .}

	:apply(csb220)

	:def csb221 = :ctf {eq src(M3#Msg) = P#Prin .}

	:apply(csb221)

	:def csb222 = :ctf {eq dst(M3#Msg) = dst(M#Msg).}

	:apply(csb222)

	:def csb223 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb223)

	:def csb224 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb224)

	:def csb225 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb225)

	:def csb226 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb226)

	:def csb227 = :ctf {eq src(M4#Msg) = dst(M#Msg).}

	:apply(csb227)

	:def csb228 = :ctf {eq dst(M4#Msg) = P#Prin .}

	:apply(csb228)

	:def csb229 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb229)

	:def csb230 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb230)

	:def csb231 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,server(cert(M1#Msg)),pubkey(cert(M1#Msg))).}

	:apply(csb231)

	:def csb232 = :ctf {eq epms(M2#Msg) = epms(pubkey(cert(M1#Msg)),pms(P#Prin,dst(M#Msg),S#Secret)).}

	:apply(csb232)

	:def csb233 = :ctf {eq ecfin(M3#Msg) = ecfin(k(P#Prin,pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb233)

	:def csb234 = :ctf {eq esfin(M4#Msg) = esfin(k(dst(M#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),sfin(P#Prin,dst(M#Msg),sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb234)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb235 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb235)

	:def csb236 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb236)

	:def csb237 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb237)

	:def csb238 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb238)

	:def csb239 = :ctf [ch2?(M#Msg) .]

	:apply(csb239)

	:def csb240 = :ctf [sh2?(M0#Msg) .]

	:apply(csb240)

	:def csb241 = :ctf [cf2?(M1#Msg) .]

	:apply(csb241)

	:def csb242 = :ctf [sf2?(M2#Msg) .]

	:apply(csb242)

	:def csb243 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb243)

	:def csb244 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb244)

	:def csb245 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb245)

	:def csb246 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb246)

	:def csb247 = :ctf {eq dst(M1#Msg) = dst(M#Msg).}

	:apply(csb247)

	:def csb248 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb248)

	:def csb249 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb249)

	:def csb250 = :ctf {eq src(M2#Msg) = dst(M#Msg).}

	:apply(csb250)

	:def csb251 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb251)

	:def csb252 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb252)

	:def csb253 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb253)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb254 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb254)

	:def csb255 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb255)

	:def csb256 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(P#Prin,pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),cfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb256)

	:def csb257 = :ctf {eq esfin2(M2#Msg) = esfin2(k(dst(M#Msg),pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),sfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb257)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb258 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb258)

	:def csb259 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb259)

	:def csb260 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb260)

	:def csb261 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb261)

	:def csb262 = :ctf [ch2?(M#Msg) .]

	:apply(csb262)

	:def csb263 = :ctf [sh2?(M0#Msg) .]

	:apply(csb263)

	:def csb264 = :ctf [cf2?(M1#Msg) .]

	:apply(csb264)

	:def csb265 = :ctf [sf2?(M2#Msg) .]

	:apply(csb265)

	:def csb266 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb266)

	:def csb267 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb267)

	:def csb268 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb268)

	:def csb269 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb269)

	:def csb270 = :ctf {eq dst(M1#Msg) = dst(M#Msg).}

	:apply(csb270)

	:def csb271 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb271)

	:def csb272 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb272)

	:def csb273 = :ctf {eq src(M2#Msg) = dst(M#Msg).}

	:apply(csb273)

	:def csb274 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb274)

	:def csb275 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb275)

	:def csb276 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb276)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb277 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb277)

	:def csb278 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb278)

	:def csb279 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(P#Prin,pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),cfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb279)

	:def csb280 = :ctf {eq esfin2(M2#Msg) = esfin2(k(dst(M#Msg),pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),sfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb280)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb281 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb281)

	:def csb282 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb282)

	:def csb283 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb283)

	:def csb284 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb284)

	:def csb285 = :ctf [ch2?(M#Msg) .]

	:apply(csb285)

	:def csb286 = :ctf [sh2?(M0#Msg) .]

	:apply(csb286)

	:def csb287 = :ctf [cf2?(M1#Msg) .]

	:apply(csb287)

	:def csb288 = :ctf [sf2?(M2#Msg) .]

	:apply(csb288)

	:def csb289 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb289)

	:def csb290 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb290)

	:def csb291 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb291)

	:def csb292 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb292)

	:def csb293 = :ctf {eq dst(M1#Msg) = dst(M#Msg).}

	:apply(csb293)

	:def csb294 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb294)

	:def csb295 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb295)

	:def csb296 = :ctf {eq src(M2#Msg) = dst(M#Msg).}

	:apply(csb296)

	:def csb297 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb297)

	:def csb298 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb298)

	:def csb299 = :ctf {eq ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg)) = none .}

	:apply(csb299)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb300 = :ctf {eq choice(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb300)

    :def csb301 = :ctf {eq pms(ss(P#Protocol,P#Prin,dst(M#Msg),sid(M0#Msg))) = pms(P#Prin,dst(M#Msg),S#Secret).}

	:apply(csb301)

	:def csb302 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(P#Prin,pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),cfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb302)

	:def csb303 = :ctf {eq esfin2(M2#Msg) = esfin2(k(dst(M#Msg),pms(P#Prin,dst(M#Msg),S#Secret),rand(M#Msg),rand(M0#Msg)),sfin2(P#Prin,dst(M#Msg),sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(P#Prin,dst(M#Msg),S#Secret))).}

	:apply(csb303)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb304 = :ctf [S#Sig \in csig(nw(P#Protocol)) .]

	:apply(csb304)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb305 = :ctf [S#Sig \in csig(nw(P#Protocol)) .]

	:apply(csb305)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb306 = :ctf [S#Sig \in csig(nw(P#Protocol)) .]

	:apply(csb306)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb307 = :ctf [E#EncCFin \in cecfin(nw(P#Protocol)) .]

	:apply(csb307)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb308 = :ctf [E#EncCFin \in cecfin(nw(P#Protocol)) .]

	:apply(csb308)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb309 = :ctf [E#EncCFin \in cecfin(nw(P#Protocol)) .]

	:apply(csb309)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb310 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb310)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb311 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb311)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb312 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb312)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb313 = :ctf [E#EncCFin2 \in cecfin2(nw(P#Protocol)) .]

	:apply(csb313)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb314 = :ctf [E#EncCFin2 \in cecfin2(nw(P#Protocol)) .]

	:apply(csb314)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb315 = :ctf [E#EncCFin2 \in cecfin2(nw(P#Protocol)) .]

	:apply(csb315)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb316 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb316)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb317 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb317)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb318 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb318)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb319 = :ctf [E#EncPms \in cepms(nw(P#Protocol)) .]

	:apply(csb319)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb320 = :ctf [E#EncPms \in cepms(nw(P#Protocol)) .]

	:apply(csb320)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb321 = :ctf [E#EncPms \in cepms(nw(P#Protocol)) .]

	:apply(csb321)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb322 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb322)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb323 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb323)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb324 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb324)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb325 = :ctf [E#EncSFin \in cesfin(nw(P#Protocol)) .]

	:apply(csb325)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb326 = :ctf [E#EncSFin \in cesfin(nw(P#Protocol)) .]

	:apply(csb326)

	:def csb327 = :ctf {eq P1@Prin  = intruder .}

	:apply(csb327)

	:def csb328 = :ctf {eq P0@Prin  = intruder .}

	:apply(csb328)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R0@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb329 = :ctf [E#EncSFin \in cesfin(nw(P#Protocol)) .]

	:apply(csb329)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb330 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb330)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb331 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb331)

	:def csb332 = :ctf {eq P1@Prin  = intruder .}

	:apply(csb332)

	:def csb333 = :ctf {eq P0@Prin  = intruder .}

	:apply(csb333)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R0@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb334 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb334)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb335 = :ctf [E#EncSFin2 \in cesfin2(nw(P#Protocol)) .]

	:apply(csb335)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb336 = :ctf [E#EncSFin2 \in cesfin2(nw(P#Protocol)) .]

	:apply(csb336)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb337 = :ctf [E#EncSFin2 \in cesfin2(nw(P#Protocol)) .]

	:apply(csb337)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb338 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb338)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb339 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb339)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb340 = :ctf [P#Pms \in cpms(nw(P#Protocol)) .]

	:apply(csb340)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb341 = :ctf {eq P1@Prin  = intruder .}

	:apply(csb341)

	:def csb342 = :ctf {eq P0@Prin  = intruder .}

	:apply(csb342)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R0@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb343 = :ctf {eq P@Prin  = intruder .}

	:apply(csb343)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:apply (rd)

	:apply (rd)

	:apply (rd)

	:apply(tc)

		:def csb344 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb344)

	:def csb345 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb345)

	:def csb346 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb346)

	:def csb347 = :ctf [S#Secret \in us(P#Protocol) .]

	:apply(csb347)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb348 = :ctf [ch?(M#Msg) .]

	:apply(csb348)

	:def csb349 = :ctf [sh?(M0#Msg) .]

	:apply(csb349)

	:def csb350 = :ctf [ct?(M1#Msg) .]

	:apply(csb350)

	:def csb351 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb351)

	:def csb352 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb352)

	:def csb353 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb353)

	:def csb354 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb354)

	:def csb355 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb355)

	:def csb356 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb356)

	:def csb357 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb357)

	:def csb358 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb358)

	:def csb359 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb359)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb360 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb360)

	:def csb361 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb361)

	:def csb362 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb362)

	:def csb363 = :ctf [S#Secret \in us(P#Protocol) .]

	:apply(csb363)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb364 = :ctf [ch?(M#Msg) .]

	:apply(csb364)

	:def csb365 = :ctf [sh?(M0#Msg) .]

	:apply(csb365)

	:def csb366 = :ctf [ct?(M1#Msg) .]

	:apply(csb366)

	:def csb367 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb367)

	:def csb368 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb368)

	:def csb369 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb369)

	:def csb370 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb370)

	:def csb371 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb371)

	:def csb372 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb372)

	:def csb373 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb373)

	:def csb374 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb374)

	:def csb375 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb375)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb376 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb376)

	:def csb377 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb377)

	:def csb378 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb378)

	:def csb379 = :ctf [S#Secret \in us(P#Protocol) .]

	:apply(csb379)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb380 = :ctf [ch?(M#Msg) .]

	:apply(csb380)

	:def csb381 = :ctf [sh?(M0#Msg) .]

	:apply(csb381)

	:def csb382 = :ctf [ct?(M1#Msg) .]

	:apply(csb382)

	:def csb383 = :ctf {eq crt(M#Msg) = P#Prin .}

	:apply(csb383)

	:def csb384 = :ctf {eq src(M#Msg) = P#Prin .}

	:apply(csb384)

	:def csb385 = :ctf {eq src(M0#Msg) = dst(M#Msg).}

	:apply(csb385)

	:def csb386 = :ctf {eq dst(M0#Msg) = P#Prin .}

	:apply(csb386)

	:def csb387 = :ctf {eq src(M1#Msg) = dst(M#Msg).}

	:apply(csb387)

	:def csb388 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb388)

	:def csb389 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb389)

	:def csb390 = :ctf {eq server(cert(M1#Msg)) = dst(M#Msg).}

	:apply(csb390)

	:def csb391 = :ctf {eq sig(cert(M1#Msg)) = sig(ca,dst(M#Msg),pubkey(cert(M1#Msg))).}

	:apply(csb391)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb392 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb392)

	:def csb393 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb393)

	:def csb394 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb394)

	:def csb395 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb395)

	:def csb396 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb396)

	:def csb397 = :ctf [ch?(M#Msg) .]

	:apply(csb397)

	:def csb398 = :ctf [sh?(M0#Msg) .]

	:apply(csb398)

	:def csb399 = :ctf [ct?(M1#Msg) .]

	:apply(csb399)

	:def csb400 = :ctf [kx?(M2#Msg) .]

	:apply(csb400)

    :def csb401 = :ctf [cf?(M3#Msg) .]

	:apply(csb401)

	:def csb402 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb402)

	:def csb403 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb403)

	:def csb404 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb404)

	:def csb405 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb405)

	:def csb406 = :ctf {eq dst(M1#Msg) = dst(M0#Msg).}

	:apply(csb406)

	:def csb407 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb407)

	:def csb408 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb408)

	:def csb409 = :ctf {eq src(M2#Msg) = dst(M0#Msg).}

	:apply(csb409)

	:def csb410 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb410)

	:def csb411 = :ctf {eq src(M3#Msg) = dst(M0#Msg).}

	:apply(csb411)

	:def csb412 = :ctf {eq dst(M3#Msg) = P#Prin .}

	:apply(csb412)

	:def csb413 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb413)

	:def csb414 = :ctf {eq cert(M1#Msg) = cert(P#Prin,k(P#Prin),sig(ca,P#Prin,k(P#Prin))).}

	:apply(csb414)

	:def csb415 = :ctf {eq k(epms(M2#Msg)) = k(P#Prin).}

	:apply(csb415)

	:def csb416 = :ctf {eq ecfin(M3#Msg) = ecfin(k(dst(M0#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(dst(M0#Msg),P#Prin,sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb416)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb417 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb417)

	:def csb418 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb418)

	:def csb419 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb419)

	:def csb420 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb420)

	:def csb421 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb421)

	:def csb422 = :ctf [ch?(M#Msg) .]

	:apply(csb422)

	:def csb423 = :ctf [sh?(M0#Msg) .]

	:apply(csb423)

	:def csb424 = :ctf [ct?(M1#Msg) .]

	:apply(csb424)

	:def csb425 = :ctf [kx?(M2#Msg) .]

	:apply(csb425)

	:def csb426 = :ctf [cf?(M3#Msg) .]

	:apply(csb426)

	:def csb427 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb427)

	:def csb428 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb428)

	:def csb429 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb429)

	:def csb430 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb430)

	:def csb431 = :ctf {eq dst(M1#Msg) = dst(M0#Msg).}

	:apply(csb431)

	:def csb432 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb432)

	:def csb433 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb433)

	:def csb434 = :ctf {eq src(M2#Msg) = dst(M0#Msg).}

	:apply(csb434)

	:def csb435 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb435)

	:def csb436 = :ctf {eq src(M3#Msg) = dst(M0#Msg).}

	:apply(csb436)

	:def csb437 = :ctf {eq dst(M3#Msg) = P#Prin .}

	:apply(csb437)

	:def csb438 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb438)

	:def csb439 = :ctf {eq cert(M1#Msg) = cert(P#Prin,k(P#Prin),sig(ca,P#Prin,k(P#Prin))).}

	:apply(csb439)

	:def csb440 = :ctf {eq k(epms(M2#Msg)) = k(P#Prin).}

	:apply(csb440)

	:def csb441 = :ctf {eq ecfin(M3#Msg) = ecfin(k(dst(M0#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(dst(M0#Msg),P#Prin,sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb441)

	:def csb442 = :ctf {eq R@Rand  = rand(M#Msg).}

	:apply(csb442)

	:def csb443 = :ctf {eq S@Sid  = sid(M0#Msg).}

	:apply(csb443)

	:def csb444 = :ctf {eq L@ListOfChoices  = list(M#Msg).}

	:apply(csb444)

	:def csb445 = :ctf {eq C@Choice  = choice(M0#Msg).}

	:apply(csb445)

	:def csb446 = :ctf {eq R0@Rand  = rand(M0#Msg).}

	:apply(csb446)

	:def csb447 = :ctf {eq P@Prin  = dst(M0#Msg).}

	:apply(csb447)

	:def csb448 = :ctf {eq P1@Prin  = P#Prin .}

	:apply(csb448)

	:def csb449 = :ctf {eq pms(dst(M0#Msg),P#Prin,S@Secret) = pms(epms(M2#Msg)).}

	:apply(csb449)

    :imp [lm1] by {M:Msg <- M0#Msg ; M2:Msg <- sh(P#Prin,P#Prin,dst(M0#Msg),rand(M0#Msg),sid(M0#Msg),choice(M0#Msg)) ; NW:Network <- nw(P#Protocol) ;}

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd) -- postpone .

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb450 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb450)

	:def csb451 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb451)

	:def csb452 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb452)

	:def csb453 = :ctf [M2#Msg \in nw(P#Protocol) .]

	:apply(csb453)

	:def csb454 = :ctf [M3#Msg \in nw(P#Protocol) .]

	:apply(csb454)

	:def csb455 = :ctf [ch?(M#Msg) .]

	:apply(csb455)

	:def csb456 = :ctf [sh?(M0#Msg) .]

	:apply(csb456)

	:def csb457 = :ctf [ct?(M1#Msg) .]

	:apply(csb457)

	:def csb458 = :ctf [kx?(M2#Msg) .]

	:apply(csb458)

	:def csb459 = :ctf [cf?(M3#Msg) .]

	:apply(csb459)

	:def csb460 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb460)

	:def csb461 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb461)

	:def csb462 = :ctf {eq crt(M1#Msg) = P#Prin .}

	:apply(csb462)

	:def csb463 = :ctf {eq src(M1#Msg) = P#Prin .}

	:apply(csb463)

	:def csb464 = :ctf {eq dst(M1#Msg) = dst(M0#Msg).}

	:apply(csb464)

	:def csb465 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb465)

	:def csb466 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb466)

	:def csb467 = :ctf {eq src(M2#Msg) = dst(M0#Msg).}

	:apply(csb467)

	:def csb468 = :ctf {eq dst(M2#Msg) = P#Prin .}

	:apply(csb468)

	:def csb469 = :ctf {eq src(M3#Msg) = dst(M0#Msg).}

	:apply(csb469)

	:def csb470 = :ctf {eq dst(M3#Msg) = P#Prin .}

	:apply(csb470)

	:def csb471 = :ctf [choice(M0#Msg)\in list(M#Msg) .]

	:apply(csb471)

	:def csb472 = :ctf {eq cert(M1#Msg) = cert(P#Prin,k(P#Prin),sig(ca,P#Prin,k(P#Prin))).}

	:apply(csb472)

	:def csb473 = :ctf {eq k(epms(M2#Msg)) = k(P#Prin).}

	:apply(csb473)

	:def csb474 = :ctf {eq ecfin(M3#Msg) = ecfin(k(dst(M0#Msg),pms(epms(M2#Msg)),rand(M#Msg),rand(M0#Msg)),cfin(dst(M0#Msg),P#Prin,sid(M0#Msg),list(M#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(epms(M2#Msg)))).}

	:apply(csb474)

	:def csb475 = :ctf {eq R@Rand  = rand(M#Msg).}

	:apply(csb475)

	:def csb476 = :ctf {eq S@Sid  = sid(M0#Msg).}

	:apply(csb476)

	:def csb477 = :ctf {eq L@ListOfChoices  = list(M#Msg).}

	:apply(csb477)

	:def csb478 = :ctf {eq C@Choice  = choice(M0#Msg).}

	:apply(csb478)

	:def csb479 = :ctf {eq R0@Rand  = rand(M0#Msg).}

	:apply(csb479)

	:def csb480 = :ctf {eq P@Prin  = dst(M0#Msg).}

	:apply(csb480)

	:def csb481 = :ctf {eq P0@Prin  = P#Prin .}

	:apply(csb481)

    :def csb482 = :ctf {eq pms(dst(M0#Msg),P#Prin,S@Secret) = pms(epms(M2#Msg)).}

	:apply(csb482)

    :imp [lm1] by {M:Msg <- M0#Msg ; M2:Msg <- sh(P#Prin,P#Prin,dst(M0#Msg),rand(M0#Msg),sid(M0#Msg),choice(M0#Msg)) ; NW:Network <- nw(P#Protocol) ;}

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd) -- postpone .

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb483 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb483)

	:def csb484 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb484)

	:def csb485 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb485)

	:def csb486 = :ctf [ch2?(M#Msg) .]

	:apply(csb486)

	:def csb487 = :ctf [sh2?(M0#Msg) .]

	:apply(csb487)

	:def csb488 = :ctf [cf2?(M1#Msg) .]

	:apply(csb488)

	:def csb489 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb489)

	:def csb490 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb490)

	:def csb491 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb491)

	:def csb492 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb492)

	:def csb493 = :ctf {eq src(M1#Msg) = dst(M0#Msg).}

	:apply(csb493)

	:def csb494 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb494)

	:def csb495 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb495)

	:def csb496 = :ctf {eq ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg)) = none .}

	:apply(csb496)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb497 = :ctf {eq choice(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb497)

	:def csb498 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(dst(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))),rand(M#Msg),rand(M0#Msg)),cfin2(dst(M0#Msg),P#Prin,sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))))).}

	:apply(csb498)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb499 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb499)

	:def csb500 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb500)

	:def csb501 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb501)

	:def csb502 = :ctf [ch2?(M#Msg) .]

	:apply(csb502)

	:def csb503 = :ctf [sh2?(M0#Msg) .]

	:apply(csb503)

	:def csb504 = :ctf [cf2?(M1#Msg) .]

	:apply(csb504)

	:def csb505 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb505)

	:def csb506 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb506)

	:def csb507 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb507)

	:def csb508 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb508)

	:def csb509 = :ctf {eq src(M1#Msg) = dst(M0#Msg).}

	:apply(csb509)

	:def csb510 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb510)

	:def csb511 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb511)

	:def csb512 = :ctf {eq ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg)) = none .}

	:apply(csb512)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb513 = :ctf {eq choice(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb513)

	:def csb514 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(dst(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))),rand(M#Msg),rand(M0#Msg)),cfin2(dst(M0#Msg),P#Prin,sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))))).}

	:apply(csb514)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb515 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb515)

	:def csb516 = :ctf [M0#Msg \in nw(P#Protocol) .]

	:apply(csb516)

	:def csb517 = :ctf [M1#Msg \in nw(P#Protocol) .]

	:apply(csb517)

	:def csb518 = :ctf [ch2?(M#Msg) .]

	:apply(csb518)

	:def csb519 = :ctf [sh2?(M0#Msg) .]

	:apply(csb519)

	:def csb520 = :ctf [cf2?(M1#Msg) .]

	:apply(csb520)

	:def csb521 = :ctf {eq crt(M0#Msg) = P#Prin .}

	:apply(csb521)

	:def csb522 = :ctf {eq src(M0#Msg) = P#Prin .}

	:apply(csb522)

	:def csb523 = :ctf {eq src(M#Msg) = dst(M0#Msg).}

	:apply(csb523)

	:def csb524 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb524)

	:def csb525 = :ctf {eq src(M1#Msg) = dst(M0#Msg).}

	:apply(csb525)

	:def csb526 = :ctf {eq dst(M1#Msg) = P#Prin .}

	:apply(csb526)

	:def csb527 = :ctf {eq sid(M#Msg) = sid(M0#Msg).}

	:apply(csb527)

	:def csb528 = :ctf {eq ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg)) = none .}

	:apply(csb528)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb529 = :ctf {eq choice(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))) = choice(M0#Msg).}

	:apply(csb529)

	:def csb530 = :ctf {eq ecfin2(M1#Msg) = ecfin2(k(dst(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))),rand(M#Msg),rand(M0#Msg)),cfin2(dst(M0#Msg),P#Prin,sid(M0#Msg),choice(M0#Msg),rand(M#Msg),rand(M0#Msg),pms(ss(P#Protocol,dst(M0#Msg),P#Prin,sid(M0#Msg))))).}

	:apply(csb530)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb531 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb531)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb532 = :ctf [S#Sid \in ui(P#Protocol) .]

	:apply(csb532)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb533 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb533)

	:def csb534 = :ctf [ch?(M#Msg) .]

	:apply(csb534)

	:def csb535 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb535)

	:def csb536 = :ctf [C#Choice \in list(M#Msg) .]

	:apply(csb536)

	:def csb537 = :ctf {eq P#Prin  = intruder .}

	:apply(csb537)

	:def csb538 = :ctf {eq P0@Prin  = P#Prin .}

	:apply(csb538)

	:def csb539 = :ctf {eq src(M#Msg) = P@Prin .}

	:apply(csb539)

	:def csb540 = :ctf {eq R#Rand  = R@Rand .}

	:apply(csb540)

	:def csb541 = :ctf {eq S#Sid  = S@Sid .}

	:apply(csb541)

	:def csb542 = :ctf {eq C#Choice  = C@Choice .}

	:apply(csb542)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb543 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb543)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb544 = :ctf [S#Sid \in ui(P#Protocol) .]

	:apply(csb544)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb545 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb545)

	:def csb546 = :ctf [ch?(M#Msg) .]

	:apply(csb546)

	:def csb547 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb547)

	:def csb548 = :ctf [C#Choice \in list(M#Msg) .]

	:apply(csb548)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb549 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb549)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb550 = :ctf [S#Sid \in ui(P#Protocol) .]

	:apply(csb550)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb551 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb551)

	:def csb552 = :ctf [ch?(M#Msg) .]

	:apply(csb552)

	:def csb553 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb553)

	:def csb554 = :ctf [C#Choice \in list(M#Msg) .]

	:apply(csb554)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:apply(tc)

	:def csb555 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb555)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb556 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb556)

	:def csb557 = :ctf [ch2?(M#Msg) .]

	:apply(csb557)

	:def csb558 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb558)

	:def csb559 = :ctf {eq ss(P#Protocol,src(M#Msg),P#Prin,sid(M#Msg)) = none .}

	:apply(csb559)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls] by {C:Choice <- C@Choice ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R:Rand <- R@Rand ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb560 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb560)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb561 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb561)

	:def csb562 = :ctf [ch2?(M#Msg) .]

	:apply(csb562)

	:def csb563 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb563)

	:def csb564 = :ctf {eq ss(P#Protocol,src(M#Msg),P#Prin,sid(M#Msg)) = none .}

	:apply(csb564)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls2] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P1:Prin <- P1@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb565 = :ctf [R#Rand \in ur(P#Protocol) .]

	:apply(csb565)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:def csb566 = :ctf [M#Msg \in nw(P#Protocol) .]

	:apply(csb566)

	:def csb567 = :ctf [ch2?(M#Msg) .]

	:apply(csb567)

	:def csb568 = :ctf {eq dst(M#Msg) = P#Prin .}

	:apply(csb568)

	:def csb569 = :ctf {eq ss(P#Protocol,src(M#Msg),P#Prin,sid(M#Msg)) = none .}

	:apply(csb569)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)

	:imp [tls1] by {C:Choice <- C@Choice ; L:ListOfChoices <- L@ListOfChoices ; P0:Prin <- P0@Prin ; P:Prin <- P@Prin ; R0:Rand <- R0@Rand ; R:Rand <- R@Rand ; S:Secret <- S@Secret ; S:Sid <- S@Sid ;}

	:apply (rd)


close
