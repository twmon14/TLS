-- I) Base case
open INV .
  :id(tls)
  op x : -> Pms .
  red inv1(init,x) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(cert(p,p2,m1,m2),x) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin(p,p1,s1,m1,m2,m3,m4),x) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(cfin2(p,p1,s1,m1,m2),x) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv1(p,x) implies inv1(chello(p,p1,p2,r3,l1),x) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv1(p,x) implies inv1(chello(p,p1,p2,r3,l1),x) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv1(p,x) implies inv1(chello2(p,p1,p2,s1,r3,i1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv1(p,x) implies inv1(chello2(p,p1,p2,s1,r3,i1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv1(p,x) implies inv1(chello2(p,p1,p2,s1,r3,i1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv1(p,x) implies inv1(chello2(p,p1,p2,s1,r3,i1),x) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),x) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(compl2(p,p1,s1,m1,m2,m3,m4),x) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeCert(p,p2,p1,pk,g),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeCert(p,p2,p1,pk,g),x) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeCfin1(p,p1,p2,ecfin1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeCfin1(p,p1,p2,ecfin1),x) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),x) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeCfin21(p,p1,p2,ecfin21),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeCfin21(p,p1,p2,ecfin21),x) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),x) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv1(p,x) implies inv1(fakeChello(p,p1,p2,r3,l1),x) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv1(p,x) implies inv1(fakeChello2(p,p1,p2,r3,i1),x) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .

  eq pms(epms1) = x . 
  eq owner(k(epms1)) = intruder .
  red inv2(p,epms1) implies inv1(p,x) implies inv1(fakeKexch1(p,p1,p2,epms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .

  eq pms(epms1) = x . 
  eq (owner(k(epms1)) = intruder) = false .
  red inv1(p,x) implies inv1(fakeKexch1(p,p1,p2,epms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .

  eq (pms(epms1) = x) = false . 
  red inv1(p,x) implies inv1(fakeKexch1(p,p1,p2,epms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeKexch1(p,p1,p2,epms1),x) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq x = pms1 .
  red inv1(p,x) implies inv1(fakeKexch2(p,p1,p2,pk,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq (x = pms1) = false .
  red inv1(p,x) implies inv1(fakeKexch2(p,p1,p2,pk,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeKexch2(p,p1,p2,pk,pms1),x) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeSfin1(p,p2,p1,esfin1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeSfin1(p,p2,p1,esfin1),x) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),x) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeSfin21(p,p2,p1,esfin21),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeSfin21(p,p2,p1,esfin21),x) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv1(p,x) implies inv1(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv1(p,x) implies inv1(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),x) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv1(p,x) implies inv1(fakeShello(p,p2,p1,r3,i1,c1),x) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv1(p,x) implies inv1(fakeShello2(p,p2,p1,r3,i1,c1),x) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq dst(m1) = intruder .
  eq sig(ca,intruder,pubkey(cert(m3))) = sig(cert(m3)) .
--
  eq x = pms(p1,intruder,s1) .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq dst(m1) = intruder .
  eq sig(ca,intruder,pubkey(cert(m3))) = sig(cert(m3)) .
--
  eq (x = pms(p1,intruder,s1)) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq dst(m1) = intruder .
  eq (sig(ca,intruder,pubkey(cert(m3))) = sig(cert(m3))) = false .
--
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (dst(m1) = intruder) = false .
  eq pubkey(cert(m3)) = k(dst(m1)) .
  eq sig(ca,dst(m1),k(dst(m1))) = sig(cert(m3)) .
--
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (dst(m1) = intruder) = false .
  eq pubkey(cert(m3)) = k(dst(m1)) .
  eq (sig(ca,dst(m1),k(dst(m1))) = sig(cert(m3))) = false .
--
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (dst(m1) = intruder) = false .
  eq (pubkey(cert(m3)) = k(dst(m1))) = false .
  eq sig(ca,dst(m1),pubkey(cert(m3))) = sig(cert(m3)) .
--
  red inv9(p,dst(m1),pubkey(cert(m3))) 
    implies inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (dst(m1) = intruder) = false .
  eq (pubkey(cert(m3)) = k(dst(m1))) = false .
  eq (sig(ca,dst(m1),pubkey(cert(m3))) = sig(cert(m3))) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(kexch(p,p1,s1,m1,m2,m3),x) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin(p,p2,m1,m2,m3,m4,m5),x) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(sfin2(p,p2,m1,m2,m3),x) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(shello(p,p2,r3,i1,c1,m1),x) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

open INV .
  :id(tls)
-- arbitrary objects
  op p : -> Protocol .
  op x : -> Pms .
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv1(p,x) implies inv1(shello2(p,p2,r3,m1),x) .
close

-- Q.E.D.
-- i) Base case
open INV .
  :id(tls)
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  red inv4(init,a,b,r1,r2,l,c,i,s) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,l,c,i,s) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,l,c,i,s) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,l,c,i,s) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeChello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeChello2(p,p1,p2,r3,i1),a,b,r1,r2,l,c,i,s) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,l,c,i,s) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
  eq sf(intruder,p2,p1,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) 
     = sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
  eq (sf(intruder,p2,p1,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) 
     = sf(b,b,a,esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq p2 = intruder .
  eq p1 = intruder .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq p2 = intruder .
  eq (p1 = intruder) = false .
  eq p1 = p2 .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq p2 = intruder .
  eq (p1 = intruder) = false .
  eq (p1 = p2) = false .
  eq pms(p1,intruder,s) \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq p2 = intruder .
  eq (p1 = intruder) = false .
  eq (p1 = p2) = false .
  eq pms(p1,intruder,s) \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq (p2 = intruder) = false .
  eq p1 = intruder .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq (p2 = intruder) = false .
  eq (p1 = intruder) = false .
  eq pms(p1,p2,s) \in cpms(nw(p)) = true .
  red inv1(p,pms(p1,p2,s)) implies inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq r2 = r4 .
  --
  eq (p2 = intruder) = false .
  eq (p1 = intruder) = false .
  eq pms(p1,p2,s) \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq (r2 = r4) = false .
  --
  eq p1 = intruder .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq (r2 = r4) = false .
  --
  eq (p1 = intruder) = false .
  eq pms(p1,p2,s) \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq pms1 = pms(p1,p2,s) .
  eq (r2 = r4) = false .
  --
  eq (p1 = intruder) = false .
  eq pms(p1,p2,s) \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq b = p2 .
  eq (pms1 = pms(p1,p2,s)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq c = c1 .
  eq (b = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq l = l1 .
  eq (c = c1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq i = i1 .
  eq (l = l1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq a = p1 .
  eq (i = i1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq r1 = r3 .
  eq (a = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq (r1 = r3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,l,c,i,s) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeShello(p,p2,p1,r3,i1,c1),a,b,r1,r2,l,c,i,s) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(fakeShello2(p,p2,p1,r3,i1,c1),a,b,r1,r2,l,c,i,s) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
--
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq pms(epms(m4)) = pms(a,b,s) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq (pms(epms(m4)) = pms(a,b,s)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq dst(m2) = intruder .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq (pms(epms(m4)) = pms(a,b,s)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq b = p2 .
  eq r2 = rand(m2) .
  eq (pms(epms(m4)) = pms(a,b,s)) = false .
  eq (pms(epms(m4)) = pms(dst(m2),p2,s)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq b = p2 .
  eq (r2 = rand(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (b = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq (c = choice(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq i = sid(m2) .
  eq (l = list(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq a = dst(m2) .
  eq (i = sid(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq r1 = rand(m1) .
  eq (a = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (r1 = rand(m1)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv4(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

-- Q.E.D.

-- I) Base case
open INV .
  :id(tls)
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  red inv8(init,a,b,r1,r2,l,c,i,s) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cert(p,p2,m1,m2),a,b,r1,r2,l,c,i,s) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .

  eq choice(m2) = choice(ss(p,p1,dst(m1),sid(m2))) . 
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq b = intruder .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .

  eq choice(m2) = choice(ss(p,p1,dst(m1),sid(m2))) . 
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (b = intruder) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .

  eq choice(m2) = choice(ss(p,p1,dst(m1),sid(m2))) . 
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  
  eq (choice(m2) = choice(ss(p,p1,dst(m1),sid(m2)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(cfin2(p,p1,s1,m1,m2),a,b,r1,r2,l,c,i,s) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(chello2(p,p1,p2,s1,r3,i1),a,b,r1,r2,l,c,i,s) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,r1,r2,l,c,i,s) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(compl2(p,p1,s1,m1,m2,m3,m4),a,b,r1,r2,l,c,i,s) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCert(p,p2,p1,pk,g),a,b,r1,r2,l,c,i,s) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin1(p,p1,p2,ecfin1),a,b,r1,r2,l,c,i,s) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin21(p,p1,p2,ecfin21),a,b,r1,r2,l,c,i,s) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeChello(p,p1,p2,r3,l1),a,b,r1,r2,l,c,i,s) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeChello2(p,p1,p2,r3,i1),a,b,r1,r2,l,c,i,s) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeKexch1(p,p1,p2,epms1),a,b,r1,r2,l,c,i,s) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeKexch2(p,p1,p2,pk,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin1(p,p2,p1,esfin1),a,b,r1,r2,l,c,i,s) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin21(p,p2,p1,esfin21),a,b,r1,r2,l,c,i,s) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,r1,r2,l,c,i,s) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeShello(p,p2,p1,r3,i1,c1),a,b,r1,r2,l,c,i,s) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(fakeShello2(p,p2,p1,r3,i1,c1),a,b,r1,r2,l,c,i,s) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
--
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(kexch(p,p1,s1,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq pms(dst(m2),p2,s) = pms(epms(m4)) .
  red lm1(m3, ct(p2,p2,dst(m2),cert(p2,k(p2),sig(ca,p2,k(p2)))), nw(p))
  implies inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (pms(dst(m2),p2,s) = pms(epms(m4))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq (b = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq (a = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (r2 = rand(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq (c = choice(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq (l = list(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq r1 = rand(m1) .
  eq (i = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw1 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .

  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
--
  eq (r1 = rand(m1)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin(p,p2,m1,m2,m3,m4,m5),a,b,r1,r2,l,c,i,s) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(sfin2(p,p2,m1,m2,m3),a,b,r1,r2,l,c,i,s) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello(p,p2,r3,i1,c1,m1),a,b,r1,r2,l,c,i,s) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv8(shello2(p,p2,r3,m1),a,b,r1,r2,l,c,i,s) .
close

-- Q.E.D.
-- I) Base case
open INV .
  :id(tls)
  op a : -> Prin .
  op k : -> PubKey .
  red inv9(init,a,k) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq a = p2 .
  eq k = k(p2) .  
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq a = p2 .
  eq (k = k(p2)) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq (a = p2) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cert(p,p2,m1,m2),a,k) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin(p,p1,s1,m1,m2,m3,m4),a,k) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(cfin2(p,p1,s1,m1,m2),a,k) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv9(p,a,k) implies inv9(chello(p,p1,p2,r3,l1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv9(p,a,k) implies inv9(chello(p,p1,p2,r3,l1),a,k) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv9(p,a,k) implies inv9(chello2(p,p1,p2,s1,r3,i1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv9(p,a,k) implies inv9(chello2(p,p1,p2,s1,r3,i1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv9(p,a,k) implies inv9(chello2(p,p1,p2,s1,r3,i1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv9(p,a,k) implies inv9(chello2(p,p1,p2,s1,r3,i1),a,k) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,k) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(compl2(p,p1,s1,m1,m2,m3,m4),a,k) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,a,k) = g .
  red inv9(p,a,k) implies inv9(fakeCert(p,p2,p1,pk,g),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq (sig(ca,a,k) = g) = false .
  red inv9(p,a,k) implies inv9(fakeCert(p,p2,p1,pk,g),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeCert(p,p2,p1,pk,g),a,k) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeCfin1(p,p1,p2,ecfin1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeCfin1(p,p1,p2,ecfin1),a,k) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,k) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeCfin21(p,p1,p2,ecfin21),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeCfin21(p,p1,p2,ecfin21),a,k) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,k) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv9(p,a,k) implies inv9(fakeChello(p,p1,p2,r3,l1),a,k) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv9(p,a,k) implies inv9(fakeChello2(p,p1,p2,r3,i1),a,k) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeKexch1(p,p1,p2,epms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeKexch1(p,p1,p2,epms1),a,k) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeKexch2(p,p1,p2,pk,pms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeKexch2(p,p1,p2,pk,pms1),a,k) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeSfin1(p,p2,p1,esfin1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeSfin1(p,p2,p1,esfin1),a,k) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,k) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeSfin21(p,p2,p1,esfin21),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeSfin21(p,p2,p1,esfin21),a,k) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv9(p,a,k) implies inv9(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv9(p,a,k) implies inv9(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,k) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv9(p,a,k) implies inv9(fakeShello(p,p2,p1,r3,i1,c1),a,k) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv9(p,a,k) implies inv9(fakeShello2(p,p2,p1,r3,i1,c1),a,k) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
--
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(kexch(p,p1,s1,m1,m2,m3),a,k) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin(p,p2,m1,m2,m3,m4,m5),a,k) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(sfin2(p,p2,m1,m2,m3),a,k) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(shello(p,p2,r3,i1,c1,m1),a,k) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  op a : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv9(p,a,k) implies inv9(shello2(p,p2,r3,m1),a,k) .
close

-- Q.E.D.

-- I) Base case
open INV .
  :id(tls)
  ops a b : -> Prin .
  op k : -> PubKey .
  red inv11(init,a,b,k) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq b = p2 .
  eq dst(m2) = a .
  eq k(p2) = k .
  eq p2 = intruder .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq b = p2 .
  eq dst(m2) = a .
  eq k(p2) = k .
  eq (p2 = intruder) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq b = p2 .
  eq dst(m2) = a .
  eq (k(p2) = k) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq b = p2 .
  eq (dst(m2) = a) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .

  eq (b = p2) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cert(p,p2,m1,m2),a,b,k) .
close


--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close


--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(cfin2(p,p1,s1,m1,m2),a,b,k) .
close


--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv11(p,a,b,k) implies inv11(chello(p,p1,p2,r3,l1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv11(p,a,b,k) implies inv11(chello(p,p1,p2,r3,l1),a,b,k) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv11(p,a,b,k) implies inv11(chello2(p,p1,p2,s1,r3,i1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv11(p,a,b,k) implies inv11(chello2(p,p1,p2,s1,r3,i1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv11(p,a,b,k) implies inv11(chello2(p,p1,p2,s1,r3,i1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv11(p,a,b,k) implies inv11(chello2(p,p1,p2,s1,r3,i1),a,b,k) .
close


--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,k) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(compl2(p,p1,s1,m1,m2,m3,m4),a,b,k) .
close


--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeCert(p,p2,p1,pk,g),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeCert(p,p2,p1,pk,g),a,b,k) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeCfin1(p,p1,p2,ecfin1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeCfin1(p,p1,p2,ecfin1),a,b,k) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,k) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeCfin21(p,p1,p2,ecfin21),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeCfin21(p,p1,p2,ecfin21),a,b,k) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,k) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv11(p,a,b,k) implies inv11(fakeChello(p,p1,p2,r3,l1),a,b,k) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv11(p,a,b,k) implies inv11(fakeChello2(p,p1,p2,r3,i1),a,b,k) .
close


--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeKexch1(p,p1,p2,epms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeKexch1(p,p1,p2,epms1),a,b,k) .
close


--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeKexch2(p,p1,p2,pk,pms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeKexch2(p,p1,p2,pk,pms1),a,b,k) .
close


--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeSfin1(p,p2,p1,esfin1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeSfin1(p,p2,p1,esfin1),a,b,k) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,k) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeSfin21(p,p2,p1,esfin21),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeSfin21(p,p2,p1,esfin21),a,b,k) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv11(p,a,b,k) implies inv11(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv11(p,a,b,k) implies inv11(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,k) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv11(p,a,b,k) implies inv11(fakeShello(p,p2,p1,r3,i1,c1),a,b,k) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv11(p,a,b,k) implies inv11(fakeShello2(p,p2,p1,r3,i1,c1),a,b,k) .
close


--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
--
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(kexch(p,p1,s1,m1,m2,m3),a,b,k) .
close


--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin(p,p2,m1,m2,m3,m4,m5),a,b,k) .
close


--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(sfin2(p,p2,m1,m2,m3),a,b,k) .
close


--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(shello(p,p2,r3,i1,c1,m1),a,b,k) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b : -> Prin .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv11(p,a,b,k) implies inv11(shello2(p,p2,r3,m1),a,b,k) .
close

-- Q.E.D.

open INV .
  :id(tls)
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  red inv13(init,a,b,b1,r1,r2,l,c,i,s,k) .
close

-- II) Inductive cases
--> 1) cert(p,p2,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  -- eq c-cert(p,p2,m1,m2) = true .  
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq choice(m2) \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq dst(m1) = p2 .
  eq (crt(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq (dst(m1) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cert(p,p2,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 2) cfin(p,p1,s1,m1,m2,m3,m4) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  -- eq c-cfin(p,p1,s1,m1,m2,m3,m4)  = true .
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 3) cfin2(p,p1,s1,m1,m2)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq (crt(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(cfin2(p,p1,s1,m1,m2),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 4) chello(p,p1,p2,r3,l1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello(p,p1,p2,r3,l1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  eq (r3 \in ur(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello(p,p1,p2,r3,l1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 5) chello2(p,p1,p2,s1,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello2(p,p1,p2,s1,r3,i1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq ss(p,p1,p2,i1) = none .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello2(p,p1,p2,s1,r3,i1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello2(p,p1,p2,s1,r3,i1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op s1 : -> Secret .
  op r3 : -> Rand .
  op i1 : -> Sid .
-- assumptions
  eq r3 \in ur(p) = false .
  eq (ss(p,p1,p2,i1) = none) = false .
  eq (pms(ss(p,p1,p2,i1)) = pms(p1,p2,s1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(chello2(p,p1,p2,s1,r3,i1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 6) compl(p,p1,s1,m1,m2,m3,m4,m5,m6) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .
  eq (esfin(m6) = esfin(k(dst(m1),pms(epms(m4)),rand(m1),rand(m2)),
                      sfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1)) .
  eq (ecfin(m5) = ecfin(k(p1,pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(p1,dst(m1),sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3))) .
  eq (epms(m4) = epms(pubkey(cert(m3)),pms(p1,dst(m1),s1))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,server(cert(m3)),pubkey(cert(m3)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq dst(m6) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq src(m6) = dst(m1) .
  eq (dst(m6) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq (src(m6) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq dst(m5) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq src(m5) = p1 .
  eq (dst(m5) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq crt(m5) = p1 .
  eq (src(m5) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq dst(m4) = dst(m1) .
  eq (crt(m5) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq src(m4) = p1 .
  eq (dst(m4) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m4) = p1 .
  eq (src(m4) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m4) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = true .
  eq (crt(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq sf?(m6) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m6 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 m5 m6 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl(p,p1,s1,m1,m2,m3,m4,m5,m6),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 7) compl2(p,p1,s1,m1,m2,m3,m4)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq ss(p,p1,dst(m1),sid(m2)) = none .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1))) .
  eq (esfin2(m4) = esfin2(k(dst(m1),pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                        sfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1) .
  eq (ecfin2(m3) = ecfin2(k(p1,pms(p1,dst(m1),s1),rand(m1),rand(m2)),
                      cfin2(p1,dst(m1),sid(m2),choice(m2),rand(m1),rand(m2),pms(p1,dst(m1),s1)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2) .
  eq (pms(ss(p,p1,dst(m1),sid(m2))) = pms(p1,dst(m1),s1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,p1,dst(m1),sid(m2)) = none) = false .
  eq (choice(ss(p,p1,dst(m1),sid(m2))) = choice(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq dst(m4) = p1 .
  eq (sid(m1) = sid(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m4) = dst(m1) .
  eq (dst(m4) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m4) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq dst(m3) = dst(m1) .
  eq (src(m2) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq src(m3) = p1 .
  eq (dst(m3) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq crt(m3) = p1 .
  eq (src(m3) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (crt(m3) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = true .
  eq (crt(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq sf2?(m4) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 m4 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(compl2(p,p1,s1,m1,m2,m3,m4),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 8) fakeCert(p,p2,p1,pk,g)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq b = intruder .
  eq b1 = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq b = intruder .
  eq (b1 = intruder) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (b = intruder) = false .
  eq a = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (b = intruder) = false .
  eq (a = intruder) = false .
  eq k = k(b) .
  red inv8(p,a,b,r1,r2,l,c,i,s) implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq sig(ca,b,k) = g .
  eq (b = intruder) = false .
  eq (a = intruder) = false .
  eq (k = k(b)) = false .
  red inv9(p,b,k) implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = true .
  eq (sig(ca,b,k) = g) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op g : -> Sig .
-- assumptions
  eq g \in csig(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCert(p,p2,p1,pk,g),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 9) fakeCfin1(p,p1,p2,ecfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin1(p,p1,p2,ecfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin1 : -> EncCFin .
-- assumptions
  eq ecfin1 \in cecfin(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin1(p,p1,p2,ecfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 10) fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin2(p,p1,p2,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 11) fakeCfin21(p,p1,p2,ecfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin21(p,p1,p2,ecfin21),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op ecfin21 : -> EncCFin2 .
-- assumptions
  eq ecfin21 \in cecfin2(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin21(p,p1,p2,ecfin21),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 12) fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeCfin22(p,p1,p2,i1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 13) fakeChello(p,p1,p2,r3,l1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op l1 : -> ListOfChoices .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeChello(p,p1,p2,r3,l1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 14) fakeChello2(p,p1,p2,r3,i1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeChello2(p,p1,p2,r3,i1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 15) fakeKexch1(p,p1,p2,epms1) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeKexch1(p,p1,p2,epms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op epms1 : -> EncPms .
-- assumptions
  eq epms1 \in cepms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeKexch1(p,p1,p2,epms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 16) fakeKexch2(p,p1,p2,pk,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeKexch2(p,p1,p2,pk,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op pk : -> PubKey .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeKexch2(p,p1,p2,pk,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 17) fakeSfin1(p,p2,p1,esfin1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq b = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq (b = intruder) = false .
  eq a = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq (b = intruder) = false .
  eq (a = intruder) = false .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq (b = intruder) = false .
  eq (a = intruder) = false .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
  
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq p1 = a .
  eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
  
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq p2 = b .
  eq (p1 = a) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq b1 = intruder .
  eq (p2 = b) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq b = p2 .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq a = intruder .
  eq a = p1 .
  eq b = intruder .
  eq (b = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq a = intruder .
  eq a = p1 .
  eq (b = intruder) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq a = intruder .
  eq (a = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq (a = intruder) = false .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = true .
  red inv4(p,a,b,r1,r2,l,c,i,s) implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) .
  eq (a = intruder) = false .
  eq esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s))) \in cesfin(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = true .

  eq (b1 = intruder) = false .
  eq (esfin1 = esfin(k(b,pms(a,b,s),r1,r2),sfin(a,b,i,l,c,r1,r2,pms(a,b,s)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin1 : -> EncSFin .
-- assumptions
  eq esfin1 \in cesfin(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin1(p,p2,p1,esfin1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 18) fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq b = intruder .
  eq b1 = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq b = intruder .
  eq (b1 = intruder) = false .
  red inv11(p,a,b1,k) implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq (b = intruder) = false .
  eq a = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .

  eq (b = intruder) = false .
  eq (a = intruder) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op l1 : -> ListOfChoices .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin2(p,p2,p1,i1,l1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 19) fakeSfin21(p,p2,p1,esfin21)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin21(p,p2,p1,esfin21),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op esfin21 : -> EncSFin2 .
-- assumptions
  eq esfin21 \in cesfin2(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin21(p,p2,p1,esfin21),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 20) fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op i1 : -> Sid .
  op c1 : -> Choice .
  ops r3 r4 : -> Rand .
  op pms1 : -> Pms .
-- assumptions
  eq pms1 \in cpms(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeSfin22(p,p2,p1,i1,c1,r3,r4,pms1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 21) fakeShello(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeShello(p,p2,p1,r3,i1,c1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 22) fakeShello2(p,p2,p1,r3,i1,c1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  ops p1 p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(fakeShello2(p,p2,p1,r3,i1,c1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 23) kexch(p,p1,s1,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3))) .
--
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq server(cert(m3)) = dst(m1) .
  eq (sig(cert(m3)) = sig(ca,dst(m1),pubkey(cert(m3)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = true .
  eq (server(cert(m3)) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq dst(m3) = p1 .
  eq choice(m2) \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq src(m3) = dst(m1) .
  eq (dst(m3) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq dst(m2) = p1 .
  eq (src(m3) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq src(m2) = dst(m1) .
  eq (dst(m2) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq src(m1) = p1 .
  eq (src(m2) = dst(m1)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq crt(m1) = p1 .
  eq (src(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq (crt(m1) = p1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq s1 \in us(p) = false .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p1 : -> Prin .
  op s1 : -> Secret .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(kexch(p,p1,s1,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 24) sfin(p,p2,m1,m2,m3,m4,m5) 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq dst(m2) = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close
 
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq k = k(p2) .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  red lm1(m3, ct(p2,p2,dst(m2),cert(p2,k,sig(ca,p2,k))), nw(p))
    implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq k = k(p2) .
  eq (pms(epms(m4)) = pms(dst(m2),p2,s)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw10 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq dst(m2) = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw10 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  eq p2 = intruder .
  eq b1 = intruder .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
  op nw10 : -> Network .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  eq p2 = intruder .
  eq (b1 = intruder) = false .
  red inv11(p,a,b1,k)
    implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  eq (p2 = intruder) = false .
  eq sig(ca,p2,k)\in csig(nw(p)) = true .
  red inv9(p,b,k)
    implies inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq pms(epms(m4)) = pms(dst(m2),p2,s) .
  eq (dst(m2) = intruder) = false .
  eq (p2 = intruder) = false .
  eq sig(ca,p2,k)\in csig(nw(p)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq b = p2 .
  eq (k = k(p2)) = false .
  eq (pms(epms(m4)) = pms(dst(m2),p2,s)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq a = dst(m2) .
  eq (b = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq r2 = rand(m2) .
  eq (a = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq c = choice(m2) .
  eq (r2 = rand(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq l = list(m1) .
  eq (c = choice(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq i = sid(m2) .
  eq (l = list(m1)) = false .  
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq r1 = rand(m1) .
  eq (i = sid(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4)))) .

  eq (r1 = rand(m1)) = false . 
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq k(epms(m4)) = k(p2) .
  eq (ecfin(m5) = ecfin(k(dst(m2),pms(epms(m4)),rand(m1),rand(m2)),
                      cfin(dst(m2),p2,sid(m2),list(m1),choice(m2),rand(m1),rand(m2),pms(epms(m4))))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2))) .
  eq (k(epms(m4)) = k(p2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = true .
  eq (cert(m3) = cert(p2,k(p2),sig(ca,p2,k(p2)))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq dst(m5) = p2 .
  eq choice(m2) \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq src(m5) = dst(m2) .
  eq (dst(m5) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq dst(m4) = p2 .
  eq (src(m5) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m4) = dst(m2) .
  eq (dst(m4) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m4) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq dst(m3) = dst(m2) .
  eq (src(m1) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq src(m3) = p2 .
  eq (dst(m3) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq crt(m3) = p2 .
  eq (src(m3) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (crt(m3) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = true .
  eq (crt(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = true .
  eq cf?(m5) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = true .
  eq kx?(m4) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = true .
  eq ct?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = true .
  eq sh?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = true .
  eq m5 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq m4 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 m4 m5 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin(p,p2,m1,m2,m3,m4,m5),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 25) sfin2(p,p2,m1,m2,m3)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq ss(p,dst(m2),p2,sid(m2)) = none .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2))))) .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2) .
  eq (ecfin2(m3) = ecfin2(k(dst(m2),pms(ss(p,dst(m2),p2,sid(m2))),rand(m1),rand(m2)),
                      cfin2(dst(m2),p2,sid(m2),choice(m2),rand(m1),rand(m2),pms(ss(p,dst(m2),p2,sid(m2)))))) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq sid(m1) = sid(m2) .
  eq (ss(p,dst(m2),p2,sid(m2)) = none) = false .
  eq (choice(ss(p,dst(m2),p2,sid(m2))) = choice(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq dst(m3) = p2 .
  eq (sid(m1) = sid(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq src(m3) = dst(m2) .
  eq (dst(m3) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq dst(m1) = p2 .
  eq (src(m3) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq src(m1) = dst(m2) .
  eq (dst(m1) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq src(m2) = p2 .
  eq (src(m1) = dst(m2)) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq crt(m2) = p2 .
  eq (src(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = true .
  eq (crt(m2) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = true .
  eq cf2?(m3) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq sh2?(m2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = true .
  eq m3 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = true .
  eq m2 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  ops m1 m2 m3 : -> Msg .
-- assumptions
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(sfin2(p,p2,m1,m2,m3),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 26) shello(p,p2,r3,i1,c1,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq dst(m1) = p2 .
  eq c1 \in list(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = true .
  eq ch?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op i1 : -> Sid .
  op c1 : -> Choice .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq i1 \in ui(p) = false .
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello(p,p2,r3,i1,c1,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

--> 27) shello2(p,p2,r3,m1)
open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = true .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq ss(p,src(m1),p2,sid(m1)) = none .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq dst(m1) = p2 .
  eq (ss(p,src(m1),p2,sid(m1)) = none) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = true .
  eq (dst(m1) = p2) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = true .
  eq ch2?(m1) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :id(tls)
  op p : -> Protocol .
  ops a b b1 : -> Prin .
  ops r1 r2 : -> Rand .
  op l : -> ListOfChoices .
  op c : -> Choice .
  op i : -> Sid .
  op s : -> Secret .
  op k : -> PubKey .
-- arbitrary objects
  op p2 : -> Prin .
  op r3 : -> Rand .
  op m1 : -> Msg .
-- assumptions
  eq r3 \in ur(p) = false .
  eq m1 \in nw(p) = false .
  red inv13(p,a,b,b1,r1,r2,l,c,i,s,k) implies inv13(shello2(p,p2,r3,m1),a,b,b1,r1,r2,l,c,i,s,k) .
close

open INV .
  :proof(tls)
close